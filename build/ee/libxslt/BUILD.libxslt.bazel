load("@rules_foreign_cc//foreign_cc:defs.bzl", "configure_make")
load("@kong_bindings//:variables.bzl", "KONG_VAR")

filegroup(
    name = "all_srcs",
    srcs = glob(
        include = ["**"],
        exclude = ["*.bazel"],
    ),
)

alias(
    name = "libxslt",
    actual = ":xslt",
    visibility = ["//visibility:public"],
)

configure_make(
    # don't use libxslt as foreign_cc implictly copy the directory with same name
    # as rule to output and xslt happens to contain a directory called libxslt
    # that contains source codes
    name = "xslt",
    configure_command = "configure",
    configure_in_place = True,
    configure_options = [
        # configure a miminal feature set at first so that we don't
        # end up depend to a lot of dependencies; do not when turning
        # on any of the feature below, we need to add it o kong package's
        # dependencies, and compile it (under build/cross_deps) for
        # cross build platforms
        "--enable-static=no",
        "--without-python",
        "--without-crypto",  # requires libgcrypt
    ] + select({
        "@kong//:aarch64-linux-anylibc-cross": [
            "--host=aarch64-linux",
        ],
        "@kong//:x86_64-linux-musl-cross": [
            "--host=x86_64-linux-musl",
        ],
        "//conditions:default": [],
    }),
    lib_source = ":all_srcs",
    linkopts = [
        "-Wl,-rpath,%s/kong/lib" % KONG_VAR["INSTALL_DESTDIR"],
    ] + select({
        "@kong//:any-cross": [
            "-Wl,-rpath-link,$$EXT_BUILD_DEPS$$/zlib/lib",
        ],
        "//conditions:default": [],
    }),
    # out_lib_dir = "lib",
    out_include_dir = "",  # don't install headers
    out_shared_libs = select({
        "@platforms//os:macos": [
            "libxslt.1.dylib",
            "libexslt.0.dylib",
        ],
        "//conditions:default": [
            "libxslt.so.1.1.39",
            "libexslt.so.0.8.21",
        ],
    }),
    targets = [
        "-j" + KONG_VAR["NPROC"],
        "install -j" + KONG_VAR["NPROC"],
    ],
    visibility = ["//visibility:public"],
    deps = [
        "@libxml2",
    ] + select({
        "@kong//:any-cross": [
            "@cross_deps_zlib//:zlib",
        ],
        "//conditions:default": [],
    }),
)
